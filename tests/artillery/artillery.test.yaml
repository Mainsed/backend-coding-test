config:
  target: "http://localhost:3000"
  http: 
    timeout: 10 # Responses have to be sent within 10 seconds or the request will be aborted
  # processor: "./processor.js"

  phases:
    # Create 100 virtual users every second for 60 seconds
    - duration: 60 # seconds
      arrivalRate: 100 # virtual users
      name: "Load test - user login - arrival rate"

  payload:
    # path is relative to the location of the test script
    path: "credential.csv"
    fields:
      - "startLatitude"
      - "startLongitude"
      - "endLatitude"
      - "endLongitude"
      - "riderName"
      - "driverName"
      - "driverVehicle"
    order: "sequence"


scenarios:
  - name: 'Load test user login & Logout'
    flow:
      - post:
          url: "/rides"
          json:
            startLatitude: "{{ startLatitude }}"
            startLongitude: "{{ startLongitude }}"
            endLatitude: "{{ endLatitude }}"
            endLongitude: "{{ endLongitude }}"
            riderName: "{{ riderName }}"
            driverName: "{{ driverName }}"
            driverVehicle: "{{ driverVehicle }}"
          #beforeRequest: parsePropertyToString
          #capture:
          #  - json: "$.token"
          #    as: token
          expect:
            - statusCode: 200

      - get:
          url: "/rides"
          expect:
            - statusCode: 200